services:
  # === Nginx (Laravel 전용, 4000 포트) ===
  nginx:
    image: nginx:1.27-alpine
    container_name: blog-nginx
    environment:
      TZ: Asia/Seoul
    ports:
      - "4000:80" # → http://localhost:4000
    depends_on:
      - php
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ../blog.backend:/var/www/html:cached
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - blognet

  # === PHP-FPM (Laravel) ===
  # php:
  #   build:
  #     context: ./php
  #   container_name: blog-php
  #   environment:
  #     APP_ENV: ${APP_ENV:-local} # 개발 환경일 때만 migrate 실행됨
  #     TZ: Asia/Seoul
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - ../blog.backend:/var/www/html:cached
  #     # .env 파일은 blog.backend 디렉토리 내에 복호화되어 자동 포함됨
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   networks:
  #     - blognet

  php:
    build:
      context: ./php
    container_name: blog-php
    environment:
      APP_ENV: local
    ports:
      - "8000:8000" # Octane 서버 직접 접근 가능
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ../blog.backend:/var/www/html:cached
    depends_on:
      db:
        condition: service_healthy
    networks:
      - blognet

  # === Node (Next.js Dev Server, 3000 포트) ===
  node:
    build:
      context: ../blog.frontend
      dockerfile: ../blog.docker/node/Dockerfile
    container_name: blog-node
    working_dir: /usr/src/app
    command: sh -lc "yarn install && yarn dev"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: "3000"
      NEXT_PUBLIC_API_BASE: "http://localhost:4000"
      TZ: Asia/Seoul
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ../blog.frontend:/usr/src/app:cached
      # .env 파일은 blog.frontend 디렉토리 내에 복호화되어 자동 포함됨
    ports:
      - "3000:3000"
    networks:
      - blognet

  # === MariaDB ===
  db:
    image: mariadb:11
    container_name: blog-mariadb
    environment:
      MARIADB_DATABASE: blog
      MARIADB_USER: blog
      MARIADB_PASSWORD: blogpass
      MARIADB_ROOT_PASSWORD: rootpass
      TZ: Asia/Seoul
    volumes:
      - dbdata:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "3306:3306"
    networks:
      - blognet
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'mariadb-admin ping -h 127.0.0.1 -uroot -p"$${MARIADB_ROOT_PASSWORD}" --silent',
        ]
      interval: 5s
      timeout: 3s
      retries: 12

networks:
  blognet:
    driver: bridge

volumes:
  dbdata:
